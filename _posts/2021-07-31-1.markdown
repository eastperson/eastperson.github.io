---
layout: post
title:  "글또 6기 다짐글"
date:   2021-07-31 09:11:57 +0900
categories: blog
---
<h2>글또 6기 다짐글</h2>
<br/>
<p>
<img src="https://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F2304f69f-d10d-414b-99e2-e8d957981ca6%2Fsymbol.png?table=block&id=096e7573-2e0f-4b2c-86d1-b42f69d09337&spaceId=601b6928-0e34-4343-9095-2e5c756903b3&width=190&userId=02ef656d-e926-4485-927c-b834f3472075&cache=v2">
<br/><br/>
개발자가 된 지 4개월 차. 새로운 자극점을 찾다 글또를 만나게 되었다. 개발도 분야가 있고 장르가 있다. 직업을 바꾸고 쉼 없이 공부를 해왔지만, kick-off만 있고 쉼표와 회고가 없었다. 증발해버리는 지식을 걷잡을 수가 없었고 기억에 의존한 지식은 되려 자신감을 잃었다. 알고는 있지만 아는 척 할 수 없는..? 아는 척을 해버렸다가는 큰일이라도 날 것 같았다. 이렇게 파편화되어있는 지식의 뭉치들은 오히려 내 발목을 잡을 것만 같았다.
</p>
<p>

나는 공부를 하면서 끊임없이 글을 적어 내려갔다. 사실 적은 양도 아니다. 책을 읽거나 인강을 듣거나 프로젝트를 하면서 배운 내용을 200회 정도 블로그에 글을 올렸다. 하지만 공부한 내용을 적어나가기 위한 글은 단편적인 상황을 벗어나지 못하고 말았다. 기억을 위한 글이었기 때문이다. 내가 무슨 공부를 했는지, 내가 무슨 상황을 겪었는지. 하지만 남이 읽기에는 배려 없는 글이 되어버렸고, 내가 비슷한 이슈를 겪었을 때 보기에는 유연한 글이 되지 못했다.
</p>
<p>

그렇기에 남을 위한 글을 작성해야겠다고 마음을 먹었다. 사실 1년 정도 지난 내 글을 보면 남이 작성한 글 같기도 하다. 그래서 종종 과거의 나에게 기분이 상하기도 한다. (코드는 2달 정도면 충분하다) 그래서 조금 더 배려심 있고 유익하고 재미있는 글을 쓰려고 노력하기 위해 글또를 시작하게 되었다.
</p>
<hr>
<h3>6기 목표</h3>
<p>
6기 목표
아직 지식과 경험이 부족하니 글에 대한 자신감이 많이 부족하다. 사실 주니어들의 블로그에는 많은 딜레마가 담겨있다. 내가 자신 있는 내용을 쓰자 하니 너무 기본적인 내용이어서 사람들의 흥미를 못 끌고 조금 깊이 있는 내용을 쓰자 하니 허점투성이의 글이 만들어진다. 그렇다고 정확한 내용을 위해서 조사를 많이 하나? 일하는 것도 바쁜데 글 작성하기 위해 며칠을 투자하기 부담스럽다.

많은 주니어 개발자들이 이와 같은 이유로 글을 포기한다. 이를 해결하기 위해 나는 3가지 방법을 생각했다.
<ol>
<li>내가 겪은 작은 이슈를 집요하게 파들어서 전문성을 더하자. - Retro</li>
<li>전문성있는 책을 읽고 내용을 완결성있게 요약하자. - Book</li>
<li>흥미있는 주제의 내용을 튜토리얼 형식으로 제안하자. - Tutorial</li>
</ol>
</p>
<p>
이 3가지 방법 중 첫 번째와 세 번째는 회사에서 종종 사용하는 방식이다. 첫 번째의 경우 작은 이슈라고 하기 뭐하지만 사소한 이유로 JVM에서 OOME이 발생한 적이 있었다. 이를 해결하려는 방법을 원인 분석을 집요하게 하고 요약하여 솔루션을 비교적 명확하게 결론을 내린 적이 있었다. (결론은 결국 코드 개선이긴 하였다.)
</p>

<p>
세 번째 방법은 스터디하면서 많이 사용했던 방법이다. 개인적으로 MSA에 대한 관심이 많아 무려 8주 동안 스터디에서 발표했는데, 하나의 기술이 아니기 때문에 이론적인 내용을 많이 다뤘다. 하지만 프로젝트로 기술을 다루는 것이 아니고 그렇다고 이론만 배우는 것은 어느 개발자도 성에 차지 않을 것이다. 따라서 적은 시간을 투자해 따라치면 기술을 구현해볼 수 있는 튜토리얼 방식의 글을 종종 작성했는데, 생각보다 시간은 오래 걸렸지만 그만큼 가장 반응도 좋고 보람이 있는 글이기도 했다.
</p>
<p>
글또에서는 많은 사람에게 도움이 되는 글을 쓰는 것이 가장 커다란 목표이다. 따라서 앞서 말한 두 번째의 방법으로 책을 읽고 그 책을 요약해서 재구성한 내용의 글을 중심으로 작성하려고 한다. 가장 쉬운 방법이면서 정확한 정보를 전달할 수 있다고 생각한다. 사실 기술 서을 2주에 1권씩 읽는다는 것은 직장인들에게 쉬운 일은 아니기에 쿠션 역할을 하는 글도 예정해놓았다.
</p>
<br/>
<h3>글또 6기 작성 예정 글 목록 - 지속적으로 업데이트</h3>
<ol>
<li>객체지향의 사실과 오해 (Book)</li>
<li>이것이 레디스다. (Book)</li>
<li>클린코드 (Book)</li>
<li>마케터는 개발자처럼 일하고 싶다. (Retro)</li>
<li>웹 앱 API 개발을 위한 GraphQL 책 도서 인사이트 (Book)</li>
<li>Spring Boot & GraphQL (Tutorial)</li>
<li>Spring Boot & Slack Block Kit (Retro)</li>
</ol>

<hr>
<h4>여담</h4>
<p>
처음으로 github.io 글을 작성하고 있는데. 생각보다 마크다운 글쓰기가 손에 안 익는다. 디자인하기가 너무 귀찮다. 맞춤법 검사도 따로 해야 하고. 하지만 뭐 익숙해지면서 조금 더 욕심이 생기겠지 하는 마음으로 조금씩 시작해본다. 예정 글 목록에 '마케터는 개발자처럼 일하고 싶다.'라는 주제가 있다. 사실 본인은 콘텐츠 마케터 출신 개발자인데, 개발자처럼 일하고 싶다는 생각을 줄곧 해왔다. 이전 회사에서 비동기적으로 업무를 진행하는 방식에 관심이 많았다. 마케터의 입장을 조금 더 생생하게 떠올려 개발자처럼 일하고 싶었던 이유를 재미있게 작성해보려고 한다. 또한 글이 잘 풀리면 속편으로 개발자가 돼서 마케터처럼 일하고 싶은 이유를 작성해보려고 한다. 뭐든 남의 떡이 더 커 보이는 것 같다.
</p>
